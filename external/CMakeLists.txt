add_library(quirc STATIC
    quirc/lib/decode.c
    quirc/lib/identify.c
    quirc/lib/quirc.c
    quirc/lib/version_db.c
)
set_target_properties(quirc PROPERTIES POSITION_INDEPENDENT_CODE ON)
target_include_directories(quirc PUBLIC quirc/lib)

set(CMAKE_CXX_STANDARD 20)

set(i2pd_target "i2pd")
set(i2pd_srcs )
file(GLOB_RECURSE I2PD_CPP_FILES "i2pd/libi2pd/*.cpp")
foreach(CPP_FILE ${I2PD_CPP_FILES})
  list(APPEND i2pd_srcs ${CPP_FILE})
endforeach()
add_library(${i2pd_target} STATIC ${i2pd_srcs})
set_target_properties(${i2pd_target} PROPERTIES POSITION_INDEPENDENT_CODE ON)
target_include_directories(${i2pd_target} PUBLIC i2pd/libi2pd/)
add_definitions(-DOPENSSL_SUPPRESS_DEPRECATED)

set(i2pd_client_target "i2pdclient")
set(i2pd_client_srcs )
file(GLOB_RECURSE I2PD_CLIENT_CPP_FILES "i2pd/libi2pd_client/*.cpp")
foreach(CPP_FILE ${I2PD_CLIENT_CPP_FILES})
  list(APPEND i2pd_client_srcs ${CPP_FILE})
endforeach()
add_library(${i2pd_client_target} STATIC ${i2pd_client_srcs})
set_target_properties(${i2pd_client_target} PROPERTIES POSITION_INDEPENDENT_CODE ON)
target_include_directories(${i2pd_client_target} PUBLIC i2pd/i18n/ i2pd/libi2pd/ i2pd/libi2pd_client/)

set(i2pd_lang_target "i2pdlang")
set(i2pd_lang_srcs )
file(GLOB_RECURSE I2PD_LANG_CPP_FILES "i2pd/i18n/*.cpp")
foreach(CPP_FILE ${I2PD_LANG_CPP_FILES})
  list(APPEND i2pd_lang_srcs ${CPP_FILE})
endforeach()
add_library(${i2pd_lang_target} STATIC ${i2pd_lang_srcs})
set_target_properties(${i2pd_lang_target} PROPERTIES POSITION_INDEPENDENT_CODE ON)
target_include_directories(${i2pd_lang_target} PUBLIC i2pd/i18n/ i2pd/libi2pd/ i2pd/libi2pd_client/)

set(i2pd_daemon_target "i2pddaemon")
set(i2pd_daemon_srcs i2pd/daemon/Daemon.cpp i2pd/daemon/HTTPServer.cpp i2pd/daemon/I2PControl.cpp i2pd/daemon/I2PControlHandlers.cpp #[[i2pd/daemon/i2pd.cpp]] i2pd/daemon/UPnP.cpp)
list(APPEND i2pd_daemon_srcs i2pd/daemon/UnixDaemon.cpp)
if(UNIX)
  list(APPEND i2pd_daemon_srcs i2pd/daemon/UnixDaemon.cpp)
endif()
if(WIN32)
    list(APPEND i2pd_daemon_srcs i2pd/Win32/DaemonWin32.cpp i2pd/Win32/Win32App.cpp i2pd/Win32/Win32Service.cpp i2pd/Win32/Win32NetState.cpp)
    target_compile_definitions(${i2pd_daemon_target} PUBLIC WIN32_APP WIN32_LEAN_AND_MEAN NOMINMAX)
endif()
add_library(${i2pd_daemon_target} STATIC ${i2pd_daemon_srcs})
set_target_properties(${i2pd_daemon_target} PROPERTIES POSITION_INDEPENDENT_CODE ON)
target_include_directories(${i2pd_daemon_target} PUBLIC i2pd/daemon/ i2pd/i18n/ i2pd/libi2pd/ i2pd/libi2pd_client)
